name: Run Playwright Tests

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Project which set in playwright.config.ts'
        required: true
        default: 'OS with Playwright'
        type: choice
        options:
          - 'OS with Playwright'

      environment:
        description: 'Environment to run (RC or QC)'
        required: true
        default: 'RC'
        type: choice
        options:
          - 'Staging'
          - 'QC'
          - 'RC'
          - 'Preview'

      suite:
        description: 'Suite to Run (default = "example" or run-all = "" or specific suite = "suite name")'
        required: false
        default: 'example'
        type: string

      tagorname:
        description: 'Tag or Test Name to run (leave empty or specify a @tag and test name)'
        required: false
        default: ''
        type: string

jobs:
  Checkout-Code:
    runs-on: ubuntu-20.04
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  Install-Dependencies:
    runs-on: ubuntu-20.04
    needs: Checkout-Code
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install
          npx playwright install chromium

  Run-Tests:
    runs-on: ubuntu-20.04
    needs: Install-Dependencies
    steps:
      - name: Run Playwright tests
        env:
          ALLURE_RESULTS_DIR: test-results/${{ github.event.inputs.environment }}
          ENV: ${{ github.event.inputs.environment }}
        run: |
          if [ -z "${{ github.event.inputs.suite }}" ] && [ -z "${{ github.event.inputs.tagorname }}" ]; then
            npx playwright test --project='${{ github.event.inputs.project }}'
          elif [ -z "${{ github.event.inputs.tagorname }}" ]; then
            npx playwright test --project='${{ github.event.inputs.project }}' -s '${{ github.event.inputs.suite }}'
          else
            npx playwright test --project='${{ github.event.inputs.project }}' -g '${{ github.event.inputs.tagorname }}'
          fi

  Collect-And-Deploy-Report:
    runs-on: ubuntu-20.04
    needs: Run-Tests
    steps:
      - name: Checkout code for report
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: report/${{ github.event.inputs.environment }}
          path: allure-history

      - name: Generate allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: test-results/${{ github.event.inputs.environment }}
          allure_history: allure-history
          keep_reports: 5

      - name: Deploy Allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: report/${{ github.event.inputs.environment }}
          publish_dir: allure-history
