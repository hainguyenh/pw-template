name: Test allure report

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Project which set in playwright.config.ts'
        required: true
        default: 'PoC with Playwright'
        type: choice
        options:
          - 'PoC with Playwright'
      environment:
        description: 'Environment to run (RC or QC)'
        required: true
        default: 'RC'
        type: choice
        options:
          - 'RC'
          - 'QC'
      suite:
        description: 'Suite to Run (all or specific suite)'
        required: true
        default: 'all'
        type: choice
        options:
          - 'all'
          - 'example'
      tagorname:
        description: 'Tag or Test Name to run (leave empty or specify a @tag and test name)'
        required: false
        default: ''
        type: string

jobs:
  test:
    runs-on: ubuntu-20.04 # Set the operating system for the job
    permissions: write-all

    defaults:
      run:
        shell: bash # Set the shell for the job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install
          npx playwright install chromium

      - name: Prepare Allure history # Step to prepare Allure history directory
        run: |
          cd ..
          mkdir -p test-results/${{ github.event.inputs.environment }}/jsons

      - name: Run Playwright tests
        env:
          ALLURE_RESULTS_DIR: test-results/${{ github.event.inputs.environment }}/jsons
          ENV: ${{ github.event.inputs.environment }}
        run: |
          if [ "${{ github.event.inputs.suite }}" = "all" ] && [ -z "${{ github.event.inputs.tagorname }}" ]; then
            npx playwright test --project='${{ github.event.inputs.project }}'
          else
            npx playwright test --project='${{ github.event.inputs.project }}' -g '${{ github.event.inputs.tagorname }}'
          fi
      - name: Get Allure history # Step to retrieve Allure history
        uses: actions/checkout@v3
        if: always() # Execute even if previous steps fail
        continue-on-error: true # Continue execution even if the step fails
        with:
          ref: report/${{ github.event.inputs.environment }} # Specify the branch to retrieve Allure history from
          path: report/${{ github.event.inputs.environment }} # Set the destination path for Allure history

      - name: Allure report action # Step to generate Allure report
        uses: simple-elf/allure-report-action@master
        if: always() # Execute even if previous steps fail
        with:
          allure_results: test-results/${{ github.event.inputs.environment }}/jsons # Specify the directory containing Allure results
          allure_history: allure-history # Specify the directory to store Allure history
          keep_reports: 5 # Specify the number of previous reports to keep

      - name: Deploy Allure report to GitHub Pages # Step to deploy Allure report to GitHub Pages
        if: always() # Execute even if previous steps fail
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # Provide the GitHub token for authentication
          publish_branch: report/${{ github.event.inputs.environment }} # Specify the branch to publish the report to
          publish_dir: allure-history # Specify the directory containing the report
